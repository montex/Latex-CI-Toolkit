#!/bin/bash
# Copyright (C) 2019-2025
# Leonardo Montecchi
# leonardo.montecchi@ntnu.no
#
# [latex-commit-diff]
# A simple bash script to automate the generation of pdf with tracked changes
# from a git repository containing latex files.
# It uses (and thus requires) latexdiff.
#
# The script was created for being used in a CI environment. As such, it
# receives parameters through environment variables.
# The following parameters are supported:
#
# BASELINE: The list of commits or tags to be used as reference for creating
#           the diff (i.e., the commit(s) containing the old version(s)). If
#           more than one commit is specified, the script will create a pdf
#           with tracked changes for each of them. If nothing is specified, the
#           previous tag in the repository will be used as reference.
#
# TEXFILES: The list of TeX files for which the pdf with tracked changes will
#           be generated. If more than one file is specified, the script will
#           create a pdf with tracked changes for each of them. If nothing is
#           specified, all the .tex files in the current folder are processed.
#
# LDAPPEND: Extra options to be appended to the latexdiff command. This can be
#           useful for processing LaTeX files with complex features that would
#           otherwise generate errors. The special value 'SAFE' makes the
#           script use an alternate configuration for handling tablular and
#           other special environments.

DIFFREFCONFIGFILE=".diffref";
LDSAFE='--config="PICTUREENV=(?:picture|DIFnomarkup|align|tabular|tabularx)'

# create temp directory and copy the repository
MYDIR="$(pwd)"
TEMPDIR="$(mktemp -d)"
echo $TEMPDIR
cp -a . $TEMPDIR
cd $TEMPDIR

if [ "$LDAPPEND" == "SAFE" ]; then export LDAPPEND=$LDSAFE; fi;

if [ ! $TEXFILES ]; then export TEXFILES=(*.tex); fi;
export FILENAMES="${TEXFILES[@]/.tex}"
export PREVIOUSTAG=`git describe --abbrev=0 --tags --always`

# If the reference commit is not specified as a CI variable
if [ ! $BASELINE ]; then
  # Use the commit in the configuration file in the tree if available
  if [ -f $DIFFREFCONFIGFILE ]; then
    FILECONTENT=`cat $DIFFREFCONFIGFILE`;
    for SHA in $FILECONTENT; do
      if git cat-file -e $SHA; then
        BASELINE+="$SHA ";
      fi
    done;
  else
    # Otherwise, use as default the previous tag in the repository
    BASELINE=$PREVIOUSTAG;
  fi
fi;

for FILE in ${FILENAMES[@]}; do
  latexpand "$FILE.tex" > "${FILE}.tex.expanded";
  mv "${FILE}.tex.expanded" "${FILE}.tex";
  latexmk -cd -bibtex-cond -interaction=nonstopmode -f -pdf "$FILE";
done;
mkdir diffoutput;
for REFCOMMIT in $BASELINE; do
  git clone . $REFCOMMIT;
  cd $REFCOMMIT;
  git checkout $REFCOMMIT;
  for FILE in "${FILENAMES[@]}"; do
    latexpand $FILE.tex > ${FILE}.tex.expanded;
    mv "${FILE}.tex.expanded" "${FILE}.tex";
    latexmk -cd -bibtex-cond -interaction=nonstopmode -f -pdf "$FILE";
  done
  cd ..;
  for FILE in "${FILENAMES[@]}"; do
    latexdiff $LDAPPEND "${REFCOMMIT}/${FILE}.tex" "${FILE}.tex" > "${FILE}_diff_${REFCOMMIT}.tex";
    if [ ! $SKIPBIB ]; then
      latexdiff $LDAPPEND "${REFCOMMIT}/${FILE}.bbl" "${FILE}.bbl" > "${FILE}_diff_${REFCOMMIT}.bbl";
    fi;
    latexmk -cd -bibtex- -interaction=nonstopmode -f -pdf "${FILE}_diff_${REFCOMMIT}.tex";
    ln -f "${FILE}_diff_${REFCOMMIT}.pdf" "${FILE}_diff.pdf";
    mv "${FILE}_diff_${REFCOMMIT}.pdf" "diffoutput";
    mv "${FILE}_diff.pdf" "diffoutput";
  done;
done;

mv $TEMPDIR/diffoutput/* "$MYDIR"
cd "$MYDIR"
